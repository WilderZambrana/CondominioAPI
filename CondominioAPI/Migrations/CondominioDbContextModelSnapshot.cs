// <auto-generated />
using System;
using CondominioAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CondominioAPI.Migrations
{
    [DbContext(typeof(CondominioDbContext))]
    partial class CondominioDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CondominioAPI.Data.Entities.AlquilerEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ArrendatarioId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DepartamentoId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ArrendatarioId");

                    b.HasIndex("DepartamentoId")
                        .IsUnique()
                        .HasFilter("[DepartamentoId] IS NOT NULL");

                    b.ToTable("Alquileres");
                });

            modelBuilder.Entity("CondominioAPI.Data.Entities.CobroEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("DepartamentoId")
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<float?>("MultaPorcentaje")
                        .HasColumnType("real");

                    b.Property<float?>("Valor")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoId");

                    b.ToTable("Cobros");
                });

            modelBuilder.Entity("CondominioAPI.Data.Entities.DepartamentoEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bloque")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("NumeroDepartamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumeroDormitorios")
                        .HasColumnType("int");

                    b.Property<long?>("PropietarioId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PropietarioId");

                    b.ToTable("Departamentos");
                });

            modelBuilder.Entity("CondominioAPI.Data.Entities.LoginEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PersonaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RolId")
                        .HasColumnType("bigint");

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.HasIndex("RolId");

                    b.ToTable("Logins");
                });

            modelBuilder.Entity("CondominioAPI.Data.Entities.PersonaEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CI")
                        .HasColumnType("bigint");

                    b.Property<long?>("Celular")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Telefono")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("CondominioAPI.Data.Entities.PublicacionEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Asunto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Detalle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaPublicacion")
                        .HasColumnType("datetime2");

                    b.Property<long?>("PersonaId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.ToTable("Publicaciones");
                });

            modelBuilder.Entity("CondominioAPI.Data.Entities.RolEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NombreRol")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("CondominioAPI.Data.Entities.AlquilerEntity", b =>
                {
                    b.HasOne("CondominioAPI.Data.Entities.PersonaEntity", "Arrendatario")
                        .WithMany("Alquileres")
                        .HasForeignKey("ArrendatarioId");

                    b.HasOne("CondominioAPI.Data.Entities.DepartamentoEntity", "Departamento")
                        .WithOne("Alquiler")
                        .HasForeignKey("CondominioAPI.Data.Entities.AlquilerEntity", "DepartamentoId");
                });

            modelBuilder.Entity("CondominioAPI.Data.Entities.CobroEntity", b =>
                {
                    b.HasOne("CondominioAPI.Data.Entities.DepartamentoEntity", "Departamento")
                        .WithMany("Cobros")
                        .HasForeignKey("DepartamentoId");
                });

            modelBuilder.Entity("CondominioAPI.Data.Entities.DepartamentoEntity", b =>
                {
                    b.HasOne("CondominioAPI.Data.Entities.PersonaEntity", "Propietario")
                        .WithMany("Departamentos")
                        .HasForeignKey("PropietarioId");
                });

            modelBuilder.Entity("CondominioAPI.Data.Entities.LoginEntity", b =>
                {
                    b.HasOne("CondominioAPI.Data.Entities.PersonaEntity", "Persona")
                        .WithMany("Logins")
                        .HasForeignKey("PersonaId");

                    b.HasOne("CondominioAPI.Data.Entities.RolEntity", "Rol")
                        .WithMany("Logins")
                        .HasForeignKey("RolId");
                });

            modelBuilder.Entity("CondominioAPI.Data.Entities.PublicacionEntity", b =>
                {
                    b.HasOne("CondominioAPI.Data.Entities.PersonaEntity", "Persona")
                        .WithMany("Publicaciones")
                        .HasForeignKey("PersonaId");
                });
#pragma warning restore 612, 618
        }
    }
}
